{
  "openapi": "3.0.0",
  "info": {
    "title": "vocascan",
    "description": "A highly configurable vocabulary trainer.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "description": "current",
      "url": "/api"
    },
    {
      "description": "localhost",
      "url": "http://localhost:5000/api"
    }
  ],
  "externalDocs": {
    "url": "https://docs.vocascan.com",
    "description": "Vocascan Documentation"
  },
  "paths": {
    "/swagger.json": {
      "get": {
        "summary": "Returns this RAW swagger.json file",
        "tags": ["miscellaneous"],
        "operationId": "getSwaggerFile",
        "security": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SwaggerFile"
          }
        }
      }
    },
    "/info": {
      "get": {
        "summary": "Get server info",
        "tags": ["miscellaneous"],
        "operationId": "getServerInfo",
        "responses": {
          "204": {
            "$ref": "#/components/responses/GetServerInfo"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "summary": "Register new user",
        "tags": ["auth"],
        "operationId": "userRegister",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/registerInviteCode"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UserRegister"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserRegister"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login user",
        "tags": ["auth"],
        "operationId": "userLogin",
        "security": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/UserLogin"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserLogin"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get user profile",
        "tags": ["user"],
        "operationId": "getUserProfile",
        "description": "Nothing needed. UserId gets parsed from JWT",
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserProfile"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "tags": ["user"],
        "operationId": "deleteUser",
        "description": "Nothing needed. UserId gets parsed from JWT",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/reset-password": {
      "patch": {
        "summary": "Reset user password",
        "tags": ["auth"],
        "operationId": "resetPassword",
        "requestBody": {
          "$ref": "#/components/requestBodies/ResetPassword"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/request-email-verification": {
      "patch": {
        "summary": "Request email verification email",
        "tags": ["auth"],
        "operationId": "requestEmailVerification",
        "requestBody": {
          "$ref": "#/components/requestBodies/RequestEmailVerification"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "410": {
            "$ref": "#/components/responses/410"
          }
        }
      }
    },
    "/languagePackage": {
      "post": {
        "summary": "Create language package for user",
        "tags": ["language package"],
        "operationId": "createLanguagePackage",
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateLanguagePackage"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateLanguagePackage"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "get": {
        "summary": "Get all language packages",
        "tags": ["language package"],
        "operationId": "getLanguagePackage",
        "parameters": [
          {
            "$ref": "#/components/parameters/groups"
          },
          {
            "$ref": "#/components/parameters/stats"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetLanguagePackage"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/stats": {
      "get": {
        "summary": "Get stats about user",
        "tags": ["user"],
        "operationId": "getUserStats",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetUserStats"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/languagePackage/{languagePackageId}/group": {
      "post": {
        "summary": "Create group for language package",
        "tags": ["group"],
        "operationId": "createGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/languagePackageId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateGroup"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateGroup"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "get": {
        "summary": "Get groups belonging to language package",
        "tags": ["group"],
        "operationId": "getGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/languagePackageId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetGroups"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/languagePackage/{languagePackageId}/group/{groupId}/vocabulary": {
      "post": {
        "summary": "Create vocabulary card",
        "tags": ["vocabulary"],
        "operationId": "createVocabulary",
        "parameters": [
          {
            "$ref": "#/components/parameters/languagePackageId"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/activate"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateVocabulary"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/CreateVocabulary"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/group/{groupId}/vocabulary": {
      "get": {
        "summary": "Get all vocabulary belonging to specific group",
        "tags": ["vocabulary"],
        "operationId": "getGroupVocabulary",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/search"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetGroupVocabulary"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/languagePackage/{languagePackageId}/query": {
      "get": {
        "summary": "Get vocabulary where timer from last query expired. Only as many words are returned as specified in the limit.",
        "tags": ["query"],
        "operationId": "startQuery",
        "parameters": [
          {
            "$ref": "#/components/parameters/languagePackageId"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/staged"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StartQuery"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/vocabulary/{vocabularyId}": {
      "delete": {
        "summary": "Delete vocabulary card",
        "tags": ["vocabulary"],
        "operationId": "deleteVocabulary",
        "parameters": [
          {
            "$ref": "#/components/parameters/vocabularyId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "put": {
        "summary": "Modify vocabulary card",
        "tags": ["vocabulary"],
        "operationId": "modifyVocabulary",
        "parameters": [
          {
            "$ref": "#/components/parameters/vocabularyId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ModifyVocabulary"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "summary": "Handles your result. moves vocabulary in the drawers depending on whether they were answered correctly or incorrectly",
        "tags": ["query"],
        "operationId": "checkVocabulary",
        "parameters": [
          {
            "$ref": "#/components/parameters/vocabularyId"
          },
          {
            "$ref": "#/components/parameters/answer"
          },
          {
            "$ref": "#/components/parameters/progress"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CheckQuery"
          },
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/group/{groupId}": {
      "delete": {
        "summary": "Delete group",
        "tags": ["group"],
        "operationId": "deleteGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "put": {
        "summary": "Modify group",
        "tags": ["group"],
        "operationId": "modifyGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ModifyGroup"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/languagePackage/{languagePackageId}": {
      "delete": {
        "summary": "Delete language package",
        "tags": ["language package"],
        "operationId": "deleteLanguagePackage",
        "parameters": [
          {
            "$ref": "#/components/parameters/languagePackageId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "put": {
        "summary": "Modify a language package",
        "tags": ["language package"],
        "operationId": "modifyLanguagePackage",
        "parameters": [
          {
            "$ref": "#/components/parameters/languagePackageId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ModifyLanguagePackage"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/language": {
      "get": {
        "summary": "Get available languages and their specific country code",
        "tags": ["util"],
        "operationId": "getLanguages",
        "parameters": [
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/code"
          },
          {
            "$ref": "#/components/parameters/nativeNames"
          },
          {
            "$ref": "#/components/parameters/rtl"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetLanguage"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/group/{groupId}/export": {
      "get": {
        "summary": "Export vocabs of a specific group",
        "tags": ["group"],
        "operationId": "exportGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ExportGroup"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/languagePackage/{languagePackageId}/export": {
      "get": {
        "summary": "Export vocabs of a specific language package",
        "tags": ["language package"],
        "operationId": "exportLanguagePackage",
        "parameters": [
          {
            "$ref": "#/components/parameters/languagePackageId"
          },
          {
            "$ref": "#/components/parameters/queryStatus"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ExportLanguagePackage"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/import": {
      "post": {
        "summary": "import language package",
        "tags": ["language package"],
        "operationId": "importLanguagePackage",
        "parameters": [
          {
            "$ref": "#/components/parameters/active"
          },
          {
            "$ref": "#/components/parameters/activate"
          },
          {
            "$ref": "#/components/parameters/queryStatus"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ImportLanguagePackage"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/import‎": {
      "post": {
        "summary": "Import group",
        "tags": ["group"],
        "operationId": "importGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/active"
          },
          {
            "$ref": "#/components/parameters/activate"
          },
          {
            "$ref": "#/components/parameters/languagePackageId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ImportGroup"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/inviteCode": {
      "get": {
        "summary": "Get all invite codes. 'null' means no restrictions regarding this property",
        "tags": ["invite code"],
        "operationId": "getInviteCodes",
        "security": [
          {
            "bearerAuthAdmin": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetInviteCodes"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "post": {
        "summary": "Create an invite code for locked servers",
        "tags": ["invite code"],
        "operationId": "createInviteCode",
        "security": [
          {
            "bearerAuthAdmin": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateInviteCode"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateInviteCode"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/inviteCode/{inviteCode}": {
      "delete": {
        "summary": "Delete specific invite code",
        "tags": ["invite code"],
        "operationId": "deleteInviteCode",
        "security": [
          {
            "bearerAuthAdmin": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/pathInviteCode"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      },
      "get": {
        "summary": "check if invite code is still valid",
        "tags": ["invite code"],
        "operationId": "checkInviteCode",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/pathInviteCode"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CheckInviteCode"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "description": "User",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "example": false
          },
          "isAdmin": {
            "type": "boolean"
          }
        }
      },
      "LanguagePackage": {
        "description": "LanguagePackage",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "foreignWordLanguage": {
            "type": "string"
          },
          "translatedWordLanguage": {
            "type": "string"
          },
          "vocabsPerDay": {
            "type": "integer"
          },
          "rightWords": {
            "type": "integer"
          }
        }
      },
      "Group": {
        "description": "Group",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "languagePackageId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "format": "uuid"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "Stats": {
        "description": "Stats",
        "type": "object",
        "properties": {
          "vocabularies": {
            "type": "object",
            "properties": {
              "all": {
                "type": "integer"
              },
              "active": {
                "type": "integer"
              },
              "inactive": {
                "type": "integer"
              },
              "unresolved": {
                "type": "integer"
              },
              "unactivated": {
                "type": "integer"
              },
              "learnedToday": {
                "type": "object",
                "properties": {
                  "dueToday": {
                    "type": "integer"
                  },
                  "correct": {
                    "type": "integer"
                  },
                  "wrong": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "Vocabulary": {
        "description": "Vocabulary",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "translations": {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "VocabularyQueried": {
        "description": "Vocabulary",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "stage": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Progress": {
        "description": "Progress",
        "type": "object",
        "properties": {
          "queryProgress": {
            "type": "object",
            "properties": {
              "dueToday": {
                "type": "string"
              },
              "correct": {
                "type": "string"
              },
              "wrong": {
                "type": "string"
              }
            }
          }
        }
      },
      "Info": {
        "description": "Info",
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "commitRef": {
            "type": "string"
          }
        }
      },
      "Language": {
        "description": "Language",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nativeNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rtl": {
            "type": "boolean"
          }
        }
      },
      "InviteCode": {
        "description": "InviteCode",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "uses": {
            "type": "integer"
          },
          "maxUses": {
            "type": "integer"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Drawer": {
        "description": "Drawer",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "languagePackageId": {
            "type": "string",
            "format": "uuid"
          },
          "stage": {
            "type": "integer"
          },
          "queryInterval": {
            "type": "integer"
          }
        }
      }
    },
    "parameters": {
      "languagePackageId": {
        "in": "path",
        "name": "languagePackageId",
        "description": "Id from language package",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "groupId": {
        "in": "path",
        "name": "groupId",
        "description": "Id from group",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "vocabularyId": {
        "in": "path",
        "name": "vocabularyId",
        "description": "Id from vocabulary card",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "limit": {
        "in": "query",
        "name": "limit",
        "description": "Limit defines the number of returned vocabulary from a request. Staged queries don't need a limit. Standart Limit: 100",
        "required": true,
        "schema": {
          "type": "number",
          "default": 100
        }
      },
      "search": {
        "in": "query",
        "name": "search",
        "description": "Filter vocabulary by names and translation names",
        "schema": {
          "type": "string"
        }
      },
      "groups": {
        "in": "query",
        "name": "groups",
        "description": "decides if groups are included in response",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "stats": {
        "in": "query",
        "name": "stats",
        "description": "decides if stats are included in response",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "active": {
        "in": "query",
        "name": "active",
        "description": "decides if vocabulary cards/groups get included in querys",
        "schema": {
          "type": "boolean",
          "default": true
        }
      },
      "activate": {
        "in": "query",
        "name": "activate",
        "description": "decides if vocabs need to be activated before putting them into query drawers",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "staged": {
        "in": "query",
        "name": "staged",
        "description": "If true, all unactivated vocabs will be returned",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "answer": {
        "in": "query",
        "name": "answer",
        "description": "type in whether your answer was right or wrong",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "progress": {
        "in": "query",
        "name": "progress",
        "description": "If true, the progress will be returned",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "name": {
        "in": "query",
        "name": "name",
        "description": "decides if name gets returned",
        "schema": {
          "type": "boolean",
          "default": true
        }
      },
      "code": {
        "in": "query",
        "name": "code",
        "description": "decides if code gets returned",
        "schema": {
          "type": "boolean",
          "default": true
        }
      },
      "nativeNames": {
        "in": "query",
        "name": "nativeNames",
        "description": "decides if nativeNames gets returned",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "rtl": {
        "in": "query",
        "name": "rtl",
        "description": "decides if rtl gets returned. Rtl describes if a language is a rigth-to-left language or not",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "queryStatus": {
        "in": "query",
        "name": "queryStatus",
        "description": "decides whether the actuall query status is exported too",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "inviteCode": {
        "in": "query",
        "name": "inviteCode",
        "required": true,
        "description": "invite code consisting of 8 random letters",
        "schema": {
          "type": "string"
        }
      },
      "pathInviteCode": {
        "in": "path",
        "name": "inviteCode",
        "required": true,
        "description": "invite code consisting of 8 random letters",
        "schema": {
          "type": "string"
        }
      },
      "registerInviteCode": {
        "in": "query",
        "name": "inviteCode",
        "description": "invite code consisting of 8 random letters. Only needed if server is locked",
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "UserRegister": {
        "description": "Register User details",
        "content": {
          "application/json": {
            "schema": {
              "description": "Register User details",
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "password": {
                  "type": "string",
                  "format": "password"
                },
                "username": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "ResetPassword": {
        "description": "New password details. No verification so we still have to type in the old password to replace it. This is does not work if you forgot your password",
        "content": {
          "application/json": {
            "schema": {
              "description": "password details",
              "type": "object",
              "required": ["password"],
              "properties": {
                "oldPassword": {
                  "type": "string",
                  "format": "password"
                },
                "newPassword": {
                  "type": "string",
                  "format": "password"
                }
              }
            }
          }
        }
      },
      "RequestEmailVerification": {
        "description": "Users email is used to send the email as the email is saved hashed.",
        "content": {
          "application/json": {
            "schema": {
              "description": "user email",
              "type": "object",
              "required": ["email"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        }
      },
      "UserLogin": {
        "description": "Login User details",
        "content": {
          "application/json": {
            "schema": {
              "description": "Login User details",
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "password": {
                  "type": "string",
                  "format": "password"
                }
              }
            }
          }
        }
      },
      "CreateLanguagePackage": {
        "description": "foreignWordLanguage and translatedWordLanguage have to be the exact country codes as you get from /api/language",
        "content": {
          "application/json": {
            "schema": {
              "description": "Create language package details",
              "$ref": "#/components/schemas/LanguagePackage"
            }
          }
        }
      },
      "ModifyLanguagePackage": {
        "description": "foreignWordLanguage and translatedWordLanguage have to be the exact country codes as you get from /api/language",
        "content": {
          "application/json": {
            "schema": {
              "description": "Create language package details",
              "$ref": "#/components/schemas/LanguagePackage"
            }
          }
        }
      },
      "CreateGroup": {
        "description": "Create group details",
        "content": {
          "application/json": {
            "schema": {
              "description": "Create group details",
              "type": "object",
              "required": ["name", "active"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "active": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "ModifyGroup": {
        "description": "Modify group details",
        "content": {
          "application/json": {
            "schema": {
              "description": "Modify group details",
              "type": "object",
              "required": ["name", "active"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "active": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "CreateVocabulary": {
        "description": "add foreign word and translations",
        "content": {
          "application/json": {
            "schema": {
              "description": "Create vocabulary details",
              "type": "object",
              "required": ["name", "active"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "active": {
                  "type": "boolean"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ModifyVocabulary": {
        "description": "add foreign word and translations",
        "content": {
          "application/json": {
            "schema": {
              "description": "Create vocabulary details",
              "type": "object",
              "required": ["name", "active"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "active": {
                  "type": "boolean"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateInviteCode": {
        "description": "information about max uses and expiration date of invite code. Not required. 'null' means infinite",
        "content": {
          "application/json": {
            "schema": {
              "description": "Create vocabulary details",
              "type": "object",
              "properties": {
                "maxUses": {
                  "type": "integer"
                },
                "expirationDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "ImportLanguagePackage": {
        "description": "imported languagePackage information",
        "content": {
          "application/json": {
            "schema": {
              "description": "Create vocabulary details",
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "vocascan/package"
                },
                "name": {
                  "type": "string"
                },
                "foreignWordLanguage": {
                  "type": "string"
                },
                "translatedWordLanguage": {
                  "type": "string"
                },
                "vocabsPerDay": {
                  "type": "integer"
                },
                "rightWords": {
                  "type": "integer"
                },
                "Groups": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "drawerId": {
                        "type": "string"
                      },
                      "VocabularyCards": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "Translations": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "Drawers": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "stage": {
                        "type": "integer"
                      },
                      "queryInterval": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ImportGroup": {
        "description": "imported group information",
        "content": {
          "application/json": {
            "schema": {
              "description": "Create vocabulary details",
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "vocascan/group"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "VocabularyCards": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "Translations": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "UserRegister": {
        "description": "Register User details",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "UserLogin": {
        "description": "Login User details",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "UserProfile": {
        "description": "User profile",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "CreateLanguagePackage": {
        "description": "Create language package response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LanguagePackage"
            }
          }
        }
      },
      "CreateGroup": {
        "description": "Create group for language package",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "CreateVocabulary": {
        "description": "Create vocabulary",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Vocabulary"
            }
          }
        }
      },
      "GetLanguagePackage": {
        "description": "Returns infos about languagePackage",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "foreignWordLanguage": {
                    "type": "string"
                  },
                  "translatedWordLanguage": {
                    "type": "string"
                  },
                  "vocabsPerDay": {
                    "type": "integer"
                  },
                  "rightWords": {
                    "type": "integer"
                  },
                  "Groups": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Group"
                    }
                  },
                  "stats": {
                    "$ref": "#/components/schemas/Stats"
                  }
                }
              }
            }
          }
        }
      },
      "GetGroups": {
        "description": "Returns info about Groups belonging to a language package",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        }
      },
      "GetGroupVocabulary": {
        "description": "Returns info about all Vocabulary belonging to a group",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Vocabulary"
              }
            }
          }
        }
      },
      "GetUserStats": {
        "description": "Returns info about all the stats from a user",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "languagePackages": {
                  "type": "object",
                  "properties": {
                    "all": {
                      "type": "integer"
                    }
                  }
                },
                "groups": {
                  "type": "object",
                  "properties": {
                    "all": {
                      "type": "integer"
                    },
                    "active": {
                      "type": "integer"
                    },
                    "inactive": {
                      "type": "integer"
                    }
                  }
                },
                "vocabularies": {
                  "type": "object",
                  "properties": {
                    "all": {
                      "type": "integer"
                    },
                    "active": {
                      "type": "integer"
                    },
                    "inactive": {
                      "type": "integer"
                    },
                    "unresolved": {
                      "type": "integer"
                    },
                    "unactivated": {
                      "type": "integer"
                    },
                    "learnedToday": {
                      "type": "object",
                      "properties": {
                        "dueToday": {
                          "type": "integer"
                        },
                        "correct": {
                          "type": "integer"
                        },
                        "wrong": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "StartQuery": {
        "description": "returns vocabulary with limit",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VocabularyQueried"
              }
            }
          }
        }
      },
      "CheckQuery": {
        "description": "If progress = true: Progress gets returned",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Progress"
            }
          }
        }
      },
      "GetServerInfo": {
        "description": "Returns information about server",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Info"
            }
          }
        }
      },
      "User": {
        "description": "User details",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "GetLanguage": {
        "description": "Returns supported languages and the country code",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Language"
              }
            }
          }
        }
      },
      "ExportGroup": {
        "description": "Returns everything of the group",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "vocascan/group"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "VocabularyCards": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "Translations": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ExportLanguagePackage": {
        "description": "Returns everything of a language package for an export \n\n drawerId and Drawers are only available if queryStatus=true",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "vocascan/package"
                },
                "name": {
                  "type": "string"
                },
                "foreignWordLanguage": {
                  "type": "string"
                },
                "translatedWordLanguage": {
                  "type": "string"
                },
                "vocabsPerDay": {
                  "type": "integer"
                },
                "rightWords": {
                  "type": "integer"
                },
                "Groups": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "drawerId": {
                        "type": "string"
                      },
                      "VocabularyCards": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "Translations": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "Drawers": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "stage": {
                        "type": "integer"
                      },
                      "queryInterval": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateInviteCode": {
        "description": "Created invite code",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InviteCode"
            }
          }
        }
      },
      "GetInviteCodes": {
        "description": "Get all invite codes",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InviteCode"
              }
            }
          }
        }
      },
      "CheckInviteCode": {
        "description": "Check if invite code is valid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "usable": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "SwaggerFile": {
        "description": "Swagger file",
        "content": {
          "application/json": {}
        }
      },
      "204": {
        "description": "APIEmpty is an empty response"
      },
      "400": {
        "description": "APIClientError is a error format response"
      },
      "401": {
        "description": "APIUnauthorizedError is a not authorized error response"
      },
      "403": {
        "description": "APIForbiddenError is a forbidden error response"
      },
      "404": {
        "description": "APINotFound is a not found error response"
      },
      "409": {
        "description": "APIConflictError is a already exists error"
      },
      "410": {
        "description": "APIGoneError is a resource gone error"
      },
      "500": {
        "description": "APIInternalServerError is a internal server error"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "bearerAuthAdmin": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Your account needs needs admin rights"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
